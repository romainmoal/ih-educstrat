{{!-- nav bar --}}
<nav class="navbar navbar-expand-lg navbar-dark bg-primary fixed-top justify-content-end">
  <button class="navbar-toggler" type="button" data-toggle="collapse" data-target="#navbarNavDropdown"
    aria-controls="navbarNavDropdown" aria-expanded="false" aria-label="Toggle navigation">
    <span class="navbar-toggler-icon"></span>
  </button>
  <div class="collapse navbar-collapse" id="navbarNavDropdown">
    <ul class="nav navbar-nav navbar-right">
      <li class="nav-item active">
        <a class="nav-link" href="/main">New search <span class="sr-only">(current)</span></a>
      </li>
      <li class="nav-item">
        <a class="nav-link" href="#">My saved searches</a>
      </li>
      <li class="nav-item dropdown">
        <a class="nav-link dropdown-toggle" href="" id="navbarDropdownMenuLink" data-toggle="dropdown"
          aria-haspopup="true" aria-expanded="false">
          Settings
        </a>
        <div class="dropdown-menu" aria-labelledby="navbarDropdownMenuLink">
          <a class="dropdown-item" href="/profile/edit">Change my account info</a>
          <a class="dropdown-item" href="/logout">Logout</a>
        </div>
      </li>
    </ul>
  </div>
</nav>

<script src="https://code.highcharts.com/highcharts.js"></script>
<script src="https://code.highcharts.com/modules/sankey.js"></script>
<script src="https://code.highcharts.com/modules/exporting.js"></script>
<br>
<br>
<div id="container"></div>

<script>
  var ProfileCurricularModel = {{{ ProfileCurricularModel }}}
  var type = window.location.href.slice(30, 36);
  var target = "Ubisoft" // window.location.href.slice(37); // on doit lier la recherche Ã  ce champ
  var results = [];
  var indexes = [];

  if (type === "school") {
    ProfileCurricularModel.forEach(sc => {
      for (var i = 0; i < sc.curriculumSchools.length; i++) {
        if (sc.curriculumSchools[i].to.schoolName === target) {
          var index = i;
          indexes.push(index);
        }
      }
      for (var j = 0; j < index + 1; j++) {
        if (sc.curriculumSchools[j].from.schoolName && sc.curriculumSchools[j].to.schoolName) {
          results.push([sc.curriculumSchools[j].from.schoolName, sc.curriculumSchools[j].to.schoolName, 1]);
        }
      }
    });
  } else if ("job") {
    ProfileCurricularModel.forEach(sc => {
      for (var i = 0; i < sc.curriculumJobs.length; i++) {
        if (sc.curriculumJobs[i].to.company === target) {
          var index = i;
          indexes.push(index);
        }
      }
      for (var j = 0; j < index + 1; j++) {
        if (sc.curriculumJobs[j].from.company && sc.curriculumJobs[j].to.company) {
          results.push([sc.curriculumJobs[j].from.company, sc.curriculumJobs[j].to.company, 1]);
        }
      }
    });
  }


  var pathAmount = indexes.length;

  Highcharts.chart('container', {

    title: {
      text: pathAmount + ' CURRICULUMS ARE AVAILABLE'
    },
    series: [{
      keys: ['from', 'to', 'weight'],
      data: results,
      type: 'sankey',
      name: 'Search Results'
    }],
    credits: {
      enabled: false
    }

  });




</script>